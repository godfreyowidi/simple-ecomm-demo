services:
  db:
    image: postgres:15
    container_name: savanna-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh:ro
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 3s
      timeout: 3s
      retries: 10
    entrypoint: ["/bin/bash", "-c"]
    command: [
      "docker-entrypoint.sh postgres & until pg_isready -U ${POSTGRES_USER}; do sleep 1; done; wait"
    ]

  migrate:
    image: migrate/migrate
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/savanna?sslmode=disable",
      "up"
    ]
    restart: on-failure

  migrate-test:
    image: migrate/migrate
    depends_on:
      - db
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/savanna_test?sslmode=disable",
      "up"
    ]
    restart: on-failure

  savanna-app:
    build: .
    container_name: savanna-app
    depends_on:
      - db
      - migrate
      - migrate-test
    environment:
      DATABASE_URL: ${DATABASE_URL}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_CLIENT_ID: ${AUTH0_CLIENT_ID}
      AUTH0_CLIENT_SECRET: ${AUTH0_CLIENT_SECRET}
      AUTH0_AUDIENCE: ${AUTH0_AUDIENCE}
      AUTH0_MANAGEMENT_API_AUDIENCE: ${AUTH0_MANAGEMENT_API_AUDIENCE}
    ports:
      - "8080:8080"

volumes:
  postgres_data:
